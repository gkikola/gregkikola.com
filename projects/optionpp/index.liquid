---
layout: layouts/main.njk
title: Option++
eleventyNavigation:
  key: Optionpp
  title: Option++
  parent: Projects
---

<div class="optionpp">
  <p class="center">
    <strong>
      <a href="/projects/optionpp/docs/">
        Documentation
      </a>
    </strong> &bull;
    <strong>
      <a href="#download">
        Download
      </a>
    </strong> &bull;
    <strong>
      <a href="/projects/optionpp/docs/example_programs.html">
        Examples
      </a>
    </strong> &bull;
    <strong>
      <a href="https://github.com/gkikola/optionpp">
        GitHub Repository
      </a>
    </strong> &bull;
    <strong>
      <a href="/projects/optionpp/docs/start.html">
        Tutorial
      </a>
    </strong>
  </p>
  <p>
    Option++ is a C++ library for reading command-line program
    options. Option++ provides an easy way to read, validate, and process
    command-line arguments and it can also print detailed program help
    information.
  </p>
  <p>
    A
    <a href="https://raw.githubusercontent.com/gkikola/optionpp/master/single_header/optionpp/optionpp.hpp">
      single-header version
    </a>
    of the library is available. If you use the single-header file,
    you must define the macro <code>OPTIONPP_MAIN</code> in exactly
    one source file before including the header.
  </p>
  <h2 id="features">Features</h2>
  <ul>
    <li>
      Supports the usual Unix and GNU/Linux conventions
      <ul>
        <li>
          Use long (<code>--option</code>) and short (<code>-o</code>)
          option names
        </li>
        <li>
          Double dash by itself (<code>--</code>) indicates end of
          options
        </li>
        <li>
          Options may have mandatory or optional arguments
        </li>
      </ul>
    </li>
    <li>
      Can parse arguments passed to <code>main</code> directly, or can
      read options from a string
    </li>
    <li>
      Allows you to bind variables to particular options
    </li>
    <li>
      Input validation for numerical arguments
    </li>
    <li>
      Can automatically generate a help message
    </li>
    <li>
      Options can be separated into groups for better organization
    </li>
    <li>
      Easily iterate over all parsed data
    </li>
    <li>
      Exception-based error handling
    </li>
  </ul>
  <h2 id="download">Download</h2>
  <p>
    Select an option below to download Option++. The source code is
    also available
    on <a href="https://github.com/gkikola/optionpp">GitHub</a>.
  </p>
  {% for project in projects %}
  {% if project.id == "optionpp" %}
  {% for version in project.versions reversed %}
  {% if version.files %}
  <p><strong>Option++ {{ version.number }}</strong> &nbsp; ({{ version.date }})</p>
  <ul>
    {% for file in version.files %}
    <li>
      {{ file.name }}:
      <a href="{{ file.url }}">{{ file.url | split: "/" | last }}</a>
    </li>
    {% endfor %}
  </ul>
  {% endif %}
  {% endfor %}
  {% endif %}
  {% endfor %}
  <h2 id="copyright">Copyright</h2>
  <p>
    Copyright &copy; 2017-2020 Greg Kikola. License BSL-1.0:
    <a href="https://www.boost.org/LICENSE_1_0.txt">
      Boost Software License version 1.0
    </a>.
  </p>
  <p>
    Option++ is free software: you are free to change and redistribute
    it. There is NO WARRANTY, to the extent permitted by law. See the
    file
    <a href="https://github.com/gkikola/optionpp/blob/master/LICENSE.txt">
      LICENSE.txt
    </a>
    which accompanies the source code for more details.
  </p>
</div>
